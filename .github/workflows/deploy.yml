name: Deploy Blog

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:
  
jobs:
  hexo-build-deploy:
    if: github.event_name == 'push' && github.ref_name == 'main'
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    environment: production
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          submodules: 'true'
          
      # - name: Create GitHub deployment
      #   uses: chrnorm/deployment-action@v2
      #   id: deployment
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     environment-url: https://blog.6leo6.com
      #     environment: production
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-npm-cache
          restore-keys: |
            ${{ runner.OS }}-npm-cache
            
      - name: Fix File Modify Time
        run: git ls-files -z | while read -d '' path; do touch -d "$(git log -1 --format="@%ct" "$path")" "$path"; done
        
      - name: Install Node Dependencies
        run: npm install
        
      - name: Install Pandoc
        run: |
          wget https://github.com/jgm/pandoc/releases/download/2.19.2/pandoc-2.19.2-1-amd64.deb -O pandoc.deb
          sudo dpkg -i pandoc.deb
          
      - name: Prepare Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx vercel --token=$VERCEL_TOKEN link --yes --project=my-blog
          npx vercel --token=$VERCEL_TOKEN pull --yes --environment=production
          
      - name: Build
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx vercel --token=$VERCEL_TOKEN build --prod --yes
        
      - name: Deploy to Vercel
        id: vercel-push
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx vercel --token=$VERCEL_TOKEN deploy --prebuilt --yes --prod > deployment-url.txt
          echo "URL=`cat deployment-url.txt`" >> $GITHUB_OUTPUT
        
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment-url: ${{ steps.vercel-push.outputs.URL }}
          deployment-id: ${{ github.event.deployment.id }}
          state: 'success'

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment-url: ${{ steps.vercel-push.outputs.URL }}
          deployment-id: ${{ github.event.deployment.id }}
          state: 'failure'
      
  hexo-build-preview:
    if: github.event_name == 'push' && github.ref_name != 'main'
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    environment: preview
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          submodules: 'true'
          
      # - name: Create GitHub deployment
      #   uses: chrnorm/deployment-action@v2
      #   id: deployment
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     # environment-url: https://blog.6leo6.com
      #     environment: preview

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-npm-cache
          restore-keys: |
            ${{ runner.OS }}-npm-cache
            
      - name: Fix File Modify Time
        run: git ls-files -z | while read -d '' path; do touch -d "$(git log -1 --format="@%ct" "$path")" "$path"; done
        
      - name: Install Node Dependencies
        run: npm install
        
      - name: Install Pandoc
        run: |
          wget https://github.com/jgm/pandoc/releases/download/2.19.2/pandoc-2.19.2-1-amd64.deb -O pandoc.deb
          sudo dpkg -i pandoc.deb
          
      - name: Prepare Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx vercel --token=$VERCEL_TOKEN link --yes --project=my-blog
          npx vercel --token=$VERCEL_TOKEN pull --yes --environment=preview
          
      - name: Build
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx vercel --token=$VERCEL_TOKEN build --yes
        
      - name: Deploy to Vercel
        id: vercel-push
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx vercel --token=$VERCEL_TOKEN deploy --prebuilt --yes > deployment-url.txt
          echo "URL=`cat deployment-url.txt`" >> $GITHUB_OUTPUT
        
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment-url: ${{ steps.vercel-push.outputs.URL }}
          deployment-id: ${{ github.event.deployment.id }}
          state: 'success'

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment-url: ${{ steps.vercel-push.outputs.URL }}
          deployment-id: ${{ github.event.deployment.id }}
          state: 'failure'